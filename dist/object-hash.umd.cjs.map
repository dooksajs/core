{"version":3,"file":"object-hash.umd.cjs","sources":["../lib/main.js"],"sourcesContent":["const TYPES = {\n  Object,\n  Array,\n  Number,\n  Boolean,\n  String\n}\n\n/** @module objectHash */\nconst objectHash = {\n  /**\n   * Create Adler 32 hex string from object\n   * @param {Object} source - The original object used to create the hash\n   * @returns {string} - Adler 32 hex string\n   */\n  process (source) {\n    try {\n      const target = {}\n\n      this._sortType(target, source)\n\n      const encoder = new TextEncoder()\n      const string = JSON.stringify(target)\n      const buffer = encoder.encode(string)\n\n      return this._adler(buffer)\n    } catch (e) {\n      console.error(e)\n    }\n  },\n  _defaultType (value) {\n    const name = value.constructor.name\n\n    return TYPES[name]()\n  },\n  _adler (value) {\n    const MOD_ADLER = 65521\n    let a = 1\n    let b = 0\n    value = new Uint8Array(value)\n\n    for (let i = 0; i < value.length; i++) {\n      a += value[i]\n      b += a\n    }\n\n    a %= MOD_ADLER\n    b %= MOD_ADLER\n\n    return this._hex(((b << 16) | a) >>> 0, 8)\n  },\n  /**\n   * Translates a character into an ordinal.\n   *\n   * @param {char} c\n   * @returns {number}\n   *\n   * @example\n   * // returns 97\n   * this._.ord('a');\n   */\n  _ord (c) {\n    // Detect astral symbols\n    // Thanks to @mathiasbynens for this solution\n    // https://mathiasbynens.be/notes/javascript-unicode\n    if (c.length === 2) {\n      const high = c.charCodeAt(0)\n      const low = c.charCodeAt(1)\n\n      if (high >= 0xd800 && high < 0xdc00 &&\n          low >= 0xdc00 && low < 0xe000) {\n        return (high - 0xd800) * 0x400 + low - 0xdc00 + 0x10000\n      }\n    }\n\n    return c.charCodeAt(0)\n  },\n  /**\n   * Converts a character or number to its hex representation.\n   *\n   * @param {char|number} c\n   * @param {number} [length=2] - The width of the resulting hex number.\n   * @returns {string}\n   *\n   * @example\n   * // returns \"6e\"\n   * this._hex(\"n\")\n   *\n   * // returns \"6e\"\n   * this._hex(110)\n   */\n  _hex (c, length = 2) {\n    c = typeof c === 'string' ? this._ord(c) : c\n    return c.toString(16).padStart(length, '0')\n  },\n  /**\n   * Sort source by data type\n   * @private\n   * @param {Object} target - Alphanumerically sorted object\n   * @param {*} source - Current value\n   * @returns\n   */\n  _sortType (target, source) {\n    if (this._nullish(source)) {\n      throw new Error('objectHash: value cannot be undefined')\n    }\n\n    if (Array.isArray(source)) {\n      source = this._array(target, source)\n    } else if (typeof source === 'object') {\n      source = this._object(target, source)\n    } else if (typeof source === 'function') {\n      source = source.toString()\n    }\n\n    return source\n  },\n  /**\n   * Check if value is undefined or null\n   * @private\n   * @param {*} value - Any value\n   * @returns {boolean}\n   */\n  _nullish (value) {\n    return (value === undefined || value === null)\n  },\n  /**\n   * Sort array alphanumerically\n   * @param {Object} target - Alphanumerically sorted object\n   * @param {Array} source - Current nested array\n   * @returns {Array}\n   */\n  _array (target, source) {\n    // make a copy\n    source = source.slice()\n\n    for (let i = 0; i < source.length; i++) {\n      const value = source[i]\n\n      source[i] = this._sortType(target, value)\n    }\n\n    return source\n  },\n  /**\n   * Sort object keys alphanumerically\n   * @private\n   * @param {Object} target - Alphanumerically sorted object\n   * @param {Object} source - Current nested object\n   * @returns {Object}\n   */\n  _object (target, source) {\n    const keys = Object.keys(source)\n\n    keys.sort()\n\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i]\n\n      target[key] = this._defaultType(source[key])\n      target[key] = this._sortType(target[key], source[key])\n    }\n\n    return target\n  }\n}\n\nexport default objectHash\n"],"names":["TYPES","source","target","encoder","string","buffer","e","value","name","a","b","c","high","low","length","i","keys","key"],"mappings":"2NAAA,MAAMA,EAAQ,CACZ,OACA,MACA,OACA,QACA,MACF,QAGmB,CAMjB,QAASC,EAAQ,CACf,GAAI,CACF,MAAMC,EAAS,CAAE,EAEjB,KAAK,UAAUA,EAAQD,CAAM,EAE7B,MAAME,EAAU,IAAI,YACdC,EAAS,KAAK,UAAUF,CAAM,EAC9BG,EAASF,EAAQ,OAAOC,CAAM,EAEpC,OAAO,KAAK,OAAOC,CAAM,CAC1B,OAAQC,EAAP,CACA,QAAQ,MAAMA,CAAC,CAChB,CACF,EACD,aAAcC,EAAO,CACnB,MAAMC,EAAOD,EAAM,YAAY,KAE/B,OAAOP,EAAMQ,CAAI,EAAG,CACrB,EACD,OAAQD,EAAO,CAEb,IAAIE,EAAI,EACJC,EAAI,EACRH,EAAQ,IAAI,WAAWA,CAAK,EAE5B,QAAS,EAAI,EAAG,EAAIA,EAAM,OAAQ,IAChCE,GAAKF,EAAM,CAAC,EACZG,GAAKD,EAGP,OAAAA,GAAK,MACLC,GAAK,MAEE,KAAK,MAAOA,GAAK,GAAMD,KAAO,EAAG,CAAC,CAC1C,EAWD,KAAME,EAAG,CAIP,GAAIA,EAAE,SAAW,EAAG,CAClB,MAAMC,EAAOD,EAAE,WAAW,CAAC,EACrBE,EAAMF,EAAE,WAAW,CAAC,EAE1B,GAAIC,GAAQ,OAAUA,EAAO,OACzBC,GAAO,OAAUA,EAAM,MACzB,OAAQD,EAAO,OAAU,KAAQC,EAAM,MAAS,MAIpD,OAAOF,EAAE,WAAW,CAAC,CACtB,EAeD,KAAMA,EAAGG,EAAS,EAAG,CACnB,OAAAH,EAAI,OAAOA,GAAM,SAAW,KAAK,KAAKA,CAAC,EAAIA,EACpCA,EAAE,SAAS,EAAE,EAAE,SAASG,EAAQ,GAAG,CAC3C,EAQD,UAAWZ,EAAQD,EAAQ,CACzB,GAAI,KAAK,SAASA,CAAM,EACtB,MAAM,IAAI,MAAM,uCAAuC,EAGzD,OAAI,MAAM,QAAQA,CAAM,EACtBA,EAAS,KAAK,OAAOC,EAAQD,CAAM,EAC1B,OAAOA,GAAW,SAC3BA,EAAS,KAAK,QAAQC,EAAQD,CAAM,EAC3B,OAAOA,GAAW,aAC3BA,EAASA,EAAO,SAAU,GAGrBA,CACR,EAOD,SAAUM,EAAO,CACf,OAA+BA,GAAU,IAC1C,EAOD,OAAQL,EAAQD,EAAQ,CAEtBA,EAASA,EAAO,MAAO,EAEvB,QAASc,EAAI,EAAGA,EAAId,EAAO,OAAQc,IAAK,CACtC,MAAMR,EAAQN,EAAOc,CAAC,EAEtBd,EAAOc,CAAC,EAAI,KAAK,UAAUb,EAAQK,CAAK,EAG1C,OAAON,CACR,EAQD,QAASC,EAAQD,EAAQ,CACvB,MAAMe,EAAO,OAAO,KAAKf,CAAM,EAE/Be,EAAK,KAAM,EAEX,QAASD,EAAI,EAAGA,EAAIC,EAAK,OAAQD,IAAK,CACpC,MAAME,EAAMD,EAAKD,CAAC,EAElBb,EAAOe,CAAG,EAAI,KAAK,aAAahB,EAAOgB,CAAG,CAAC,EAC3Cf,EAAOe,CAAG,EAAI,KAAK,UAAUf,EAAOe,CAAG,EAAGhB,EAAOgB,CAAG,CAAC,EAGvD,OAAOf,CACR,CACH"}