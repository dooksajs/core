{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://schema.dooksa.org/1.0/list.schema.json",
  "title": "Data",
  "$defs": {
    "list_filter": {
      "title": "Filter",
      "description": "Filter items based on conditions",
      "type": "object",
      "properties": {
        "items": {
          "oneOf": [
            {
              "$ref": "./base.schema.json#/$defs/action"
            },
            {
              "type": "array",
              "items": {
                "$ref": "./base.schema.json#/$defs/action"
              }
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          ]
        },
        "options": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "$ref": "./base.schema.json#/$defs/string"
              },
              "value": {
                "oneOf": [
                  {
                    "$ref": "./base.schema.json#/$defs/action"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "boolean"
                  }
                ]
              }
            }
          }
        }
      },
      "required": ["items", "options"]
    },
    "list_forEach": {
      "type": "object",
      "properties": {
        "context": {
          "$ref": "./base.schema.json#/$defs/action"
        },
        "items": {
          "$ref": "./base.schema.json#/$defs/action"
        },
        "actionId": {
          "$ref": "./base.schema.json#/$defs/string"
        },
        "async": {
          "$ref": "./base.schema.json#/$defs/boolean"
        }
      }
    },
    "list_push": {
      "type": "object",
      "properties": {
        "target": {
          "oneOf": [
            {
              "$ref": "./base.schema.json#/$defs/action"
            },
            {
              "type": "array",
              "items": {
                "$ref": "./base.schema.json#/$defs/action"
              }
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          ]
        },
        "source": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "./base.schema.json#/$defs/action"
              }
            },
            {
              "$ref": "./base.schema.json#/$defs/action"
            },
            {
              "type": "string"
            },
            {
              "type": "number"
            },
            {
              "type": "boolean"
            }
          ]
        }
      },
      "required": ["target", "source"]
    },
    "list_sort": {
      "type": "object",
      "properties": {
        "items": {
          "oneOf": [
            {
              "$ref": "./base.schema.json#/$defs/action"
            },
            {
              "type": "array",
              "items": {
                "$ref": "./base.schema.json#/$defs/action"
              }
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          ]
        },
        "type": {
          "enum": ["ascending", "descending"]
        }
      },
      "required": ["items", "type"]
    },
    "list_splice": {
      "type": "object",
      "properties": {
        "target": {
          "oneOf": [
            {
              "$ref": "./base.schema.json#/$defs/action"
            },
            {
              "type": "array",
              "items": {
                "$ref": "./base.schema.json#/$defs/action"
              }
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          ]
        },
        "source": {
          "$ref": "./base.schema.json#/$defs/primitive"
        },
        "start": {
          "type": "number"
        },
        "deleteCount": {
          "type": "number"
        }
      },
      "required": ["target", "source"]
    }
  }
}